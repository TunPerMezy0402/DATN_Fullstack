import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import userApi, { User } from "../../../api/userApi";

const UserDetail: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();

  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(true);
  const [updating, setUpdating] = useState(false);
  const [error, setError] = useState("");

  // üü¢ L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
  useEffect(() => {
    const fetchUser = async () => {
      try {
        const data = await userApi.getById(id!);
        setUser(data);
      } catch (err) {
        setError("Kh√¥ng th·ªÉ t·∫£i th√¥ng tin ng∆∞·ªùi d√πng.");
      } finally {
        setLoading(false);
      }
    };
    fetchUser();
  }, [id]);

  // üü¢ H√†m b·∫≠t/t·∫Øt tr·∫°ng th√°i (active/inactive)
  const handleToggleStatus = async () => {
    if (!user) return;

    const newStatus = user.status === "active" ? "inactive" : "active";
    const confirmMsg =
      newStatus === "active"
        ? "B·∫°n c√≥ ch·∫Øc mu·ªën k√≠ch ho·∫°t ng∆∞·ªùi d√πng n√†y?"
        : "B·∫°n c√≥ ch·∫Øc mu·ªën t·∫°m ng∆∞ng ng∆∞·ªùi d√πng n√†y?";

    if (!window.confirm(confirmMsg)) return;

    setUpdating(true);
    try {
      await userApi.update(user.id, { status: newStatus });
      setUser({ ...user, status: newStatus });
      alert("C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh c√¥ng!");
    } catch {
      alert("L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i.");
    } finally {
      setUpdating(false);
    }
  };

  // üü° Loading
  if (loading) {
    return (
      <div className="flex flex-col items-center justify-center py-20">
        <div className="w-10 h-10 border-4 border-blue-400 border-t-transparent rounded-full animate-spin"></div>
        <p className="mt-4 text-gray-600">ƒêang t·∫£i th√¥ng tin ng∆∞·ªùi d√πng...</p>
      </div>
    );
  }

  // üî¥ L·ªói ho·∫∑c kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng
  if (error || !user) {
    return (
      <div className="flex flex-col items-center justify-center py-20 text-center">
        <p className="text-red-500 mb-3">{error || "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng."}</p>
        <button
          onClick={() => navigate(-1)}
          className="text-blue-600 hover:underline"
        >
          ‚Üê Quay l·∫°i
        </button>
      </div>
    );
  }

  // üü¢ Giao di·ªán hi·ªÉn th·ªã chi ti·∫øt
  return (
    <div className="max-w-3xl mx-auto p-6 bg-white shadow-lg rounded-2xl mt-10">
      {/* Header */}
      <div className="flex items-center justify-between mb-6">
        <button
          onClick={() => navigate(-1)}
          className="text-blue-600 hover:underline flex items-center"
        >
          ‚Üê Quay l·∫°i
        </button>
        <h1 className="text-2xl font-semibold text-gray-800">Chi ti·∫øt ng∆∞·ªùi d√πng</h1>
      </div>

      {/* Avatar */}
      <div className="flex flex-col items-center mb-8">
        <div className="w-24 h-24 rounded-full bg-blue-500 text-white flex items-center justify-center text-4xl font-bold">
          {user.name?.charAt(0).toUpperCase()}
        </div>
        <p className="mt-3 text-lg font-medium text-gray-700">{user.name}</p>
        <p className="text-gray-500 text-sm">{user.email}</p>
      </div>

      {/* Info grid */}
      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 text-gray-700">
        <div>
          <p className="font-medium text-gray-500">S·ªë ƒëi·ªán tho·∫°i:</p>
          <p>{user.phone || "‚Äî"}</p>
        </div>
        <div>
          <p className="font-medium text-gray-500">ƒê·ªãa ch·ªâ:</p>
          <p>{user.address || "‚Äî"}</p>
        </div>
        <div>
          <p className="font-medium text-gray-500">Vai tr√≤:</p>
          <p className="capitalize">{user.role || "‚Äî"}</p>
        </div>
        <div>
          <p className="font-medium text-gray-500">Tr·∫°ng th√°i:</p>
          <span
            className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${
              user.status === "active"
                ? "bg-green-100 text-green-700"
                : "bg-red-100 text-red-700"
            }`}
          >
            {user.status === "active" ? "Ho·∫°t ƒë·ªông" : "T·∫°m ng∆∞ng"}
          </span>
        </div>
        <div>
          <p className="font-medium text-gray-500">Ng√†y t·∫°o:</p>
          <p>{user.created_at || "‚Äî"}</p>
        </div>
        <div>
          <p className="font-medium text-gray-500">C·∫≠p nh·∫≠t g·∫ßn nh·∫•t:</p>
          <p>{user.updated_at || "‚Äî"}</p>
        </div>
      </div>

      {/* Update Button */}
      <div className="mt-8 text-center">
        <button
          onClick={handleToggleStatus}
          disabled={updating}
          className={`px-6 py-3 rounded-lg font-semibold text-white ${
            updating
              ? "bg-gray-400 cursor-not-allowed"
              : user.status === "active"
              ? "bg-red-500 hover:bg-red-600"
              : "bg-green-500 hover:bg-green-600"
          }`}
        >
          {updating
            ? "ƒêang c·∫≠p nh·∫≠t..."
            : user.status === "active"
            ? "T·∫°m ng∆∞ng ng∆∞·ªùi d√πng"
            : "K√≠ch ho·∫°t ng∆∞·ªùi d√πng"}
        </button>
      </div>
    </div>
  );
};

export default UserDetail;
